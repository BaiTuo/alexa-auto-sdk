From 41ec9212034f807345d3ec8daef45e631a5d2315 Mon Sep 17 00:00:00 2001
From: Shotaro Uchida <shotaru@amazon.com>
Date: Mon, 5 Feb 2018 01:46:17 -0800
Subject: [PATCH] qnx: Use int64_t explicitly

---
 CapabilityAgents/AudioPlayer/src/AudioPlayer.cpp      | 10 +++++-----
 CapabilityAgents/System/src/UserInactivityMonitor.cpp |  2 +-
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/CapabilityAgents/AudioPlayer/src/AudioPlayer.cpp b/CapabilityAgents/AudioPlayer/src/AudioPlayer.cpp
index effef263..e19096e9 100644
--- a/CapabilityAgents/AudioPlayer/src/AudioPlayer.cpp
+++ b/CapabilityAgents/AudioPlayer/src/AudioPlayer.cpp
@@ -576,7 +576,7 @@ void AudioPlayer::executeProvideState(bool sendToken, unsigned int stateRequestT
     rapidjson::Document state(rapidjson::kObjectType);
     state.AddMember(TOKEN_KEY, m_token, state.GetAllocator());
     state.AddMember(
-        OFFSET_KEY, std::chrono::duration_cast<std::chrono::milliseconds>(getOffset()).count(), state.GetAllocator());
+        OFFSET_KEY, (int64_t) std::chrono::duration_cast<std::chrono::milliseconds>(getOffset()).count(), state.GetAllocator());
     state.AddMember(ACTIVITY_KEY, playerActivityToString(m_currentActivity), state.GetAllocator());
 
     rapidjson::StringBuffer buffer;
@@ -1092,7 +1092,7 @@ void AudioPlayer::sendEventWithTokenAndOffset(const std::string& eventName, std:
         offset = getOffset();
     }
     payload.AddMember(
-        OFFSET_KEY, std::chrono::duration_cast<std::chrono::milliseconds>(offset).count(), payload.GetAllocator());
+        OFFSET_KEY, (int64_t) std::chrono::duration_cast<std::chrono::milliseconds>(offset).count(), payload.GetAllocator());
 
     rapidjson::StringBuffer buffer;
     rapidjson::Writer<rapidjson::StringBuffer> writer(buffer);
@@ -1130,11 +1130,11 @@ void AudioPlayer::sendPlaybackStutterFinishedEvent() {
     rapidjson::Document payload(rapidjson::kObjectType);
     payload.AddMember(TOKEN_KEY, m_token, payload.GetAllocator());
     payload.AddMember(
-        OFFSET_KEY, std::chrono::duration_cast<std::chrono::milliseconds>(getOffset()).count(), payload.GetAllocator());
+        OFFSET_KEY, (int64_t) std::chrono::duration_cast<std::chrono::milliseconds>(getOffset()).count(), payload.GetAllocator());
     auto stutterDuration = std::chrono::steady_clock::now() - m_bufferUnderrunTimestamp;
     payload.AddMember(
         STUTTER_DURATION_KEY,
-        std::chrono::duration_cast<std::chrono::milliseconds>(stutterDuration).count(),
+        (int64_t) std::chrono::duration_cast<std::chrono::milliseconds>(stutterDuration).count(),
         payload.GetAllocator());
 
     rapidjson::StringBuffer buffer;
@@ -1163,7 +1163,7 @@ void AudioPlayer::sendPlaybackFailedEvent(
     rapidjson::Value currentPlaybackState(rapidjson::kObjectType);
     currentPlaybackState.AddMember(TOKEN_KEY, m_token, payload.GetAllocator());
     currentPlaybackState.AddMember(
-        OFFSET_KEY, std::chrono::duration_cast<std::chrono::milliseconds>(getOffset()).count(), payload.GetAllocator());
+        OFFSET_KEY, (int64_t) std::chrono::duration_cast<std::chrono::milliseconds>(getOffset()).count(), payload.GetAllocator());
     currentPlaybackState.AddMember(ACTIVITY_KEY, playerActivityToString(m_currentActivity), payload.GetAllocator());
 
     payload.AddMember("currentPlaybackState", currentPlaybackState, payload.GetAllocator());
diff --git a/CapabilityAgents/System/src/UserInactivityMonitor.cpp b/CapabilityAgents/System/src/UserInactivityMonitor.cpp
index 42efbd28..d2eacd95 100644
--- a/CapabilityAgents/System/src/UserInactivityMonitor.cpp
+++ b/CapabilityAgents/System/src/UserInactivityMonitor.cpp
@@ -123,7 +123,7 @@ void UserInactivityMonitor::sendInactivityReport() {
     const Pointer::Token payloadKey[] = {{INACTIVITY_EVENT_PAYLOAD_KEY.c_str(), payloadKeySize, kPointerInvalidIndex}};
     auto inactiveTime =
         std::chrono::duration_cast<std::chrono::seconds>(std::chrono::steady_clock::now() - lastTimeActive);
-    Pointer(payloadKey, 1).Set(inactivityPayload, inactiveTime.count());
+    Pointer(payloadKey, 1).Set(inactivityPayload, (int64_t) inactiveTime.count());
     std::string inactivityPayloadString;
     jsonUtils::convertToValue(inactivityPayload, &inactivityPayloadString);
 
-- 
2.16.1

